let mongoose,user,hash;_aef‍.x([["default",()=>_aef‍.o]]);_aef‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_aef‍.w("../typeDefs/user",[["default",["user"],function(v){user=v}]]);_aef‍.w("bcrypt",[["hash",["hash"],function(v){hash=v}]]);

let Schema = mongoose.Schema;


//create new model with the same properties in TypeDefs (graphql schema)
let userSchema = new Schema({
    email: String,
    username: String,
    name: String,
    password: String
},
{
    // replacement for createAt or updateAt property.
    timestamps: true
})

userSchema.pre('save', async function(){
    if(this.isModified('password')){
        try {  this.password =  await hash(this.password, 9)
        next()
        } catch (error) {
            next(error)
        }
    } 
    next()
})
_aef‍.d(mongoose.model('User',userSchema));   