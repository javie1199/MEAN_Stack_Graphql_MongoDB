let User,mongoose,Joi,SignUp;_3b9‍.x([["default",()=>_3b9‍.o]]);_3b9‍.w("../models",[["User",["User"],function(v){User=v}]]);_3b9‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_3b9‍.w("joi",[["default",["Joi"],function(v){Joi=v}]]);_3b9‍.w("../schemas",[["SignUp",["SignUp"],function(v){SignUp=v}]]);




_3b9‍.d({
    Query: {
        users: (root, args, context, info) => {

            return User.find({})
        },
        user: (root, {id}, context, info) => {
            if(!mongoose.Types.ObjectId.isValid(id)){
                throw new Error(`${id} is not correct`)
            }

            return User.findById(id)
        },
    },

    Mutation: {
        signUp: async (root, args, context, info) => {
            await Joi.validate(args, SignUp, {abortEarly: false})
            return User.create(args)
        },
    }
});